Algorithmen für Fitness:
    - Event Räume beachten (by default alle Räume erlaubt, constraints setzen?)
    - Event Dozenten beachten (ein Dozent kann nur an einem Ort gleichzeitig sein)
    - Events eines Studiengangs möglichst "nah" aneinander
    - Master Vorlesungen nur Montags & Dienstags (sind dann einfach Constraints oder?)

Datenbank Tabellen:
    - Events (Dozent, Name)
    - Constraints (mit entsprechenden Metadaten)

Programme:
    - Künstliche Daten erzeugen und bereitstellen (als json/xml, oder in Datenbank?)
    - hier künstliche Daten parsen und verwenden
    - Ergebnis TimeTable darstellen lassen (erstmal wie soll output format aussehen?)

Optimierung:
    - Fitness für TimeTable Cachen lassen über eine weitere Klasse
      falls es zwei TimeTable Instanzen gibt die aber inhaltlich gleich sind
        -> hashCode implementieren -> testen ob es überhaupt Zeit spart
        (Da eventuell das jedes mal prüfen mehr Rechenzeit kostet, und es nur sehr selten hilft)

    - Für Timepoints eine Flyweight Factory für Arbeitsspeicher Optimieren?

